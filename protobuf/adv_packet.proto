/*
 * Protobuf2 descrption of a BLE advertising packet.
 * See generic online encoder/decoder here: https://protogen.marcgravell.com/
 *
 */ 
syntax = "proto2";

package BLE;

// needed for the annotations.
// See https://jpa.kapsi.fi/nanopb/docs/reference.html#proto-file-options
import "nanopb.proto";

message adv_packet {
    // required fields
    required bytes address = 1 [(nanopb).fixed_length = true, (nanopb).max_size = 6, (nanopb).max_count = 1];
    required int32 rssi = 2;
    required int32 tx_power = 3;
    required int32 dataLen = 4;
    required bool scanResponse = 5;

    // optional fields
    optional int32 flags = 6;

    // 248 octets aka 31 bytes says page 1910
    optional string localName = 7 [(nanopb).fixed_length = true, (nanopb).max_size = 31, (nanopb).max_count = 1];

    // 26 bytes in the advertising data or 29 bytes in the scan response
    // first byte used to store length
    optional bytes MSD = 8 [(nanopb).fixed_length = true, (nanopb).max_size = 30, (nanopb).max_count = 1];

    // variable length so use first byte used to store length
    optional bytes serviceData = 9 [(nanopb).fixed_length = true, (nanopb).max_size = 30];

    // fixed length service data
    optional bytes serviceData16 = 10 [(nanopb).fixed_length = true, (nanopb).max_size = 2];
    optional bytes serviceData128 = 11 [(nanopb).fixed_length = true, (nanopb).max_size = 16];

    // fixed length service IDs
    optional bytes serviceID16 = 12 [(nanopb).fixed_length = true, (nanopb).max_size = 2];
    optional bytes serviceID32 = 13 [(nanopb).fixed_length = true, (nanopb).max_size = 4];
    optional bytes serviceID128 = 14 [(nanopb).fixed_length = true, (nanopb).max_size = 16];
}